<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shangpin.uaas.services.dao.mapper.ResourceNodeMapper" >
  <resultMap id="BaseResultMap" type="com.shangpin.uaas.entity.ResourceNode" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="moduleName" property="moduleName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="parentResourceId" property="parentResourceId" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="resourceId" property="resourceId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="UnionResultMap" type="com.shangpin.uaas.entity.ResourceNode" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="moduleName" property="moduleName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="parentResourceId" property="parentResourceId" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="resourceId" property="resourceId" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="VARCHAR" />
    <result column="uri" property="uri" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, moduleName, type, parentResourceId, description, resourceId
  </sql>
  <sql id="Base_Column_List_UNION" >
    resourceNode.`id` id, moduleName, resourceNode.`type` type, parentResourceId, description, resourceId ,resource.`enabled` enabled,resource.`uri` uri
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shangpin.uaas.entity.example.ResourceNodeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resourceNode
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="findAll" resultMap="UnionResultMap" >
     select  rn.`id` id, moduleName, rn.`type` type, parentResourceId, description, resourceId, r.`enabled` enabled ,r.`uri` uri
    from resourceNode rn LEFT JOIN resource r ON rn.`resourceId`=r.`id`
  </select>
  <select id="findByResourceNodeCriteriaDTO" resultMap="UnionResultMap" >
    select  rn.`id` id, moduleName, rn.`type` type, parentResourceId, description, resourceId, r.`enabled` enabled ,r.`uri` uri
    from resourceNode rn LEFT JOIN resource r ON rn.`resourceId`=r.`id`
    <where>
      <if test="resourceNodeDto.nameLike!=null">
        rn.`moduleName` like CONCAT('%', #{resourceNodeDto.nameLike},'%')
      </if>
      <if test="resourceNodeDto.isEnabled!=null">
        and r.`enabled`=#{resourceNodeDto.isEnabled}
      </if>

    </where>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from resourceNode
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from resourceNode
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.shangpin.uaas.entity.example.ResourceNodeExample" >
    delete from resourceNode
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shangpin.uaas.entity.ResourceNode" >
    insert into resourceNode (id, moduleName, type, 
      parentResourceId, description, resourceId
      )
    values (#{id,jdbcType=VARCHAR}, #{moduleName,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{parentResourceId,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{resourceId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shangpin.uaas.entity.ResourceNode" >
    insert into resourceNode
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="moduleName != null" >
        moduleName,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="parentResourceId != null" >
        parentResourceId,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="resourceId != null" >
        resourceId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="moduleName != null" >
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="parentResourceId != null" >
        #{parentResourceId,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null" >
        #{resourceId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shangpin.uaas.entity.example.ResourceNodeExample" resultType="java.lang.Integer" >
    select count(*) from resourceNode
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update resourceNode
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleName != null" >
        moduleName = #{record.moduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.parentResourceId != null" >
        parentResourceId = #{record.parentResourceId,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceId != null" >
        resourceId = #{record.resourceId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update resourceNode
    set id = #{record.id,jdbcType=VARCHAR},
    moduleName = #{record.moduleName,jdbcType=VARCHAR},
    type = #{record.type,jdbcType=VARCHAR},
    parentResourceId = #{record.parentResourceId,jdbcType=VARCHAR},
    description = #{record.description,jdbcType=VARCHAR},
    resourceId = #{record.resourceId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shangpin.uaas.entity.ResourceNode" >
    update resourceNode
    <set >
      <if test="moduleName != null" >
        moduleName = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="parentResourceId != null" >
        parentResourceId = #{parentResourceId,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null" >
        resourceId = #{resourceId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shangpin.uaas.entity.ResourceNode" >
    update resourceNode
    set moduleName = #{moduleName,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      parentResourceId = #{parentResourceId,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      resourceId = #{resourceId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>