<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shangpin.uaas.services.dao.mapper.ResourceMapper" >
  <resultMap id="BaseResultMap" type="com.shangpin.uaas.entity.Resource" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="TINYINT" />
    <result column="uri" property="uri" jdbcType="VARCHAR" />
    <result column="functionId" property="functionId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, enabled, uri, functionId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shangpin.uaas.entity.example.ResourceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="findResourcesByUserId" resultMap="BaseResultMap" >
    SELECT p.* FROM permission p
      INNER JOIN resource re
        ON p.`resourceId`=re.`id`
      INNER JOIN role r
        ON p.`roleId`=r.`id`
      INNER JOIN userRole ur
        ON r.`id`= ur.`roleId`
    WHERE ur.`userId`=#{userId}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from resource
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="findResourcesByRoleId" resultMap="BaseResultMap" >
    SELECT r.`uri` FROM resource r
      INNER JOIN permission p ON r.`id`=p.`resourceId`
      INNER JOIN role rl ON p.`roleId`=rl.`id`
    WHERE rl.`id`=#{roleId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from resource
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.shangpin.uaas.entity.example.ResourceExample" >
    delete from resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shangpin.uaas.entity.Resource" >
    insert into resource (id, enabled, uri, 
      functionId)
    values (#{id,jdbcType=VARCHAR}, #{enabled,jdbcType=TINYINT}, #{uri,jdbcType=VARCHAR}, 
      #{functionId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shangpin.uaas.entity.Resource" >
    insert into resource
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="uri != null" >
        uri,
      </if>
      <if test="functionId != null" >
        functionId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=TINYINT},
      </if>
      <if test="uri != null" >
        #{uri,jdbcType=VARCHAR},
      </if>
      <if test="functionId != null" >
        #{functionId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shangpin.uaas.entity.example.ResourceExample" resultType="java.lang.Integer" >
    select count(*) from resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update resource
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null" >
        enabled = #{record.enabled,jdbcType=TINYINT},
      </if>
      <if test="record.uri != null" >
        uri = #{record.uri,jdbcType=VARCHAR},
      </if>
      <if test="record.functionId != null" >
        functionId = #{record.functionId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update resource
    set id = #{record.id,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=TINYINT},
      uri = #{record.uri,jdbcType=VARCHAR},
      functionId = #{record.functionId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shangpin.uaas.entity.Resource" >
    update resource
    <set >
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=TINYINT},
      </if>
      <if test="uri != null" >
        uri = #{uri,jdbcType=VARCHAR},
      </if>
      <if test="functionId != null" >
        functionId = #{functionId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shangpin.uaas.entity.Resource" >
    update resource
    set enabled = #{enabled,jdbcType=TINYINT},
      uri = #{uri,jdbcType=VARCHAR},
      functionId = #{functionId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>